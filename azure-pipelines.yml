trigger:
  - master
  - tag

pr:
- master

pool:
    vmImage: 'ubuntu-latest'

stages:
- stage: build_test_frontend
  displayName: 'Build and test frontend'
  dependsOn: []
  jobs:
  - job: unit_test
    displayName: 'Run unit tests'
    strategy:
      matrix:
        node_10:
          node_version: '10.x'
        node_12:
          node_version: '12.x'
        node_13:
          node_version: '13.x'
      maxParallel: 3
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: $(node_version)
        displayName: 'Install Node.js'
    - script: |
        npm install
        sudo npm install -g codecov
      displayName: 'Install dependencies'
      workingDirectory: monitoring-center-frontend/
    - script: npm run test:unit
      displayName: 'Run unit tests'
      workingDirectory: monitoring-center-frontend/
    - script: codecov
      displayName: 'Upload Coverage'
      condition: and(succeeded(), eq(variables['node_version'], '12.x'))
      workingDirectory: monitoring-center-frontend/
      env:
        CODECOV_TOKEN: $(CODECOV_TOKEN)
  - job: build_docker_frontend
    displayName: 'Build docker image'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'
        displayName: 'Install Node.js'
    - script: |
        npm install
        npm run build --production
      workingDirectory: monitoring-center-frontend/
      displayName: 'Install and build package'
    - script: docker build . -t ahugues/monitoring-center-frontend
      workingDirectory: monitoring-center-frontend/
      displayName: 'Build image'
    - script: docker save -o $(Build.ArtifactStagingDirectory)/monitoring-center-frontend.tar ahugues/monitoring-center-frontend:latest
      workingDirectory: monitoring-center-frontend/
      displayName: 'Save image'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish image to artifacts'
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: docker_artifacts

- stage: build_test_backend
  displayName: 'Build and test backend'
  dependsOn: []
  jobs:
  - job: unit_test
    displayName: 'Run unit tests'
    strategy:
      matrix:
        python_36:
          python_version: '3.6'
        python_37:
          python_version: '3.7'
        python_38:
          python_version: '3.8'
      maxParallel: 3
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: $(python_version)
        displayName: 'Install Python'
    - script: |
        pip install -r requirements.txt
        pip install -r test-requirements.txt
      displayName: 'Install dependencies'
      workingDirectory: monitoring-center-backend/
    - script: pytest
      displayName: 'Run unit tests'
      workingDirectory: monitoring-center-backend/

  - job: build_docker_backend
    displayName: 'Build docker image'
    steps:
    - script: docker build . -t ahugues/heimdall-monitoring-backend
      workingDirectory: monitoring-center-backend/
      displayName: 'Build image'
    - script: docker save -o $(Build.ArtifactStagingDirectory)/heimdall-monitoring-backend.tar ahugues/heimdall-monitoring-backend:latest
      workingDirectory: monitoring-center-backend/
      displayName: 'Save image'
    - task: PublishBuildArtifacts@1
      displayName: 'Publish image to artifacts'
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: docker_artifacts

# - stage: deploy_frontend
#   displayName: 'Deploy Frontend'
#   condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
#   jobs:
#   - job: deploy_docker
#     displayName: 'Deploy docker image'
#     steps:
#     - task: Docker@2
#       displayName: 'Login to DockerHub'
#       inputs:
#         command: login
#         containerRegistry: docker-hub-ahugues
#     - task: DownloadBuildArtifacts@0
#       displayName: 'Download image from artifacts'
#       inputs:
#         buildType: 'current'
#         downloadType: 'single'
#         artifactName: 'docker_artifacts'
#         downloadPath: '$(System.ArtifactsDirectory)'
#     - script: docker load -i $(System.ArtifactsDirectory)/docker_artifacts/porygon-frontend.tar
#       displayName: 'Load docker image'
#     - script: docker tag ahugues/porygon-frontend:latest ahugues/porygon-frontend:master
#       displayName: 'Tag master image'
#       condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
#     - task: Docker@2
#       displayName: 'Push master image'
#       condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
#       inputs:
#         command: push
#         repository: ahugues/porygon-frontend
#         containerRegistry: docker-hub-ahugues
#         tags: |
#           master
#     - script: bash docker_push 
#       displayName: 'Push tagged images to Docker Hub'
#       condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
